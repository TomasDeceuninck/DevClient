{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
      "storageType": {
        "type": "string",
        "defaultValue": "Premium_LRS",
        "allowedValues": [
          "Premium_LRS",
          "Standard_LRS"
        ],
        "metadata": {
          "description": "Which type of storage you want to use"
        }
      },
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "Local name for the VM can be whatever you want"
        }
      },
      "vmAdminUserName": {
        "type": "string",
        "metadata": {
          "description": "VM admin user name"
        }
      },
      "vmAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "VM admin password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character."
        }
      },
      "vmSize": {
        "type": "string",
        "metadata": {
          "description": "Desired Size of the VM. Any valid option accepted but if you choose premium storage type you must choose a DS class VM size."
        },
        "defaultValue": "Standard_D2_v3",
        "allowedValues": [
            "Standard_D2_v3",
            "Standard_D2s_v3",
            "Standard_D4_v3",
            "Standard_D4s_v3",
            "Standard_D2_v2",
            "Standard_D2S_v2",
            "Standard_D3_v2"
        ]
      },
      "vmVisualStudioVersion": {
        "type": "string",
        "defaultValue": "VS-2017-Comm-Latest-Win10-N",
        "allowedValues": [
            "VS-2015-Comm-VSU3-AzureSDK-29-Win10-N",
            "VS-2015-Comm-VSU3-AzureSDK-29-WS2012R2",
            "VS-2015-Ent-VSU3-AzureSDK-29-Win10-N",
            "VS-2015-Ent-VSU3-AzureSDK-29-WS2012R2",
            "VS-2017-Comm-Latest-Preview-WS2016",
            "VS-2017-Comm-Latest-Win10-N",
            "VS-2017-Comm-Latest-WS2016",
            "VS-2017-Comm-Win10-N",
            "VS-2017-Comm-WS2016",
            "VS-2017-Ent-Latest-Preview-WS2016",
            "VS-2017-Ent-Latest-Win10-N",
            "VS-2017-Ent-Latest-WS2016",
            "VS-2017-Ent-Win10-N",
            "VS-2017-Ent-WS2016",
            "vs-2019-preview-win10-n",
            "vs-2019-preview-ws2016"
        ],
        "metadata": {
          "description": "Which version of Visual Studio you would like to deploy"
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
        }
      },
      "startBoxstarterScriptFileName": {
        "type": "string",
        "defaultValue": "Start-Boxstarter.ps1",
        "metadata": {
          "description": "PowerShell script name to execute"
        }
      },
      "startBoxstarterScriptLocation": {
        "type": "string",
        "defaultValue": "https://gist.githubusercontent.com/TomasDeceuninck/ff6fe5cb4c1cb82a806c2044b534069e/raw/dad9db0b8bc44897f8dd6c53faa29adbfb8d3df8/",
        "metadata": {
          "description": "Raw gist URI"
        }
      },
      "boxstarterConfigRawGistURL": {
        "type": "string",
        "defaultValue": "https://gist.githubusercontent.com/TomasDeceuninck/d9518726aa832d01644427f6190a6b20/raw/ed46b4ab72981d3a2679e6154ab1cf656beacc62/DevClientConfig.ps1",
        "metadata": {
          "description": "Raw gist URI of config script"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "storageName": "[concat(uniquestring(resourceGroup().id), 'standardsa')]",
      "vnet01Prefix": "10.0.0.0/16",
      "vnet01Subnet1Name": "Subnet-1",
      "vnet01Subnet1Prefix": "10.0.0.0/24",
      "vmImagePublisher": "MicrosoftVisualStudio",
      "vmImageOffer": "VisualStudio",
      "vmOSDiskName": "VMOSDisk",
      "vmSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'Vnet01', variables('Vnet01Subnet1Name'))]",
      "vmStorageAccountContainerName": "vhds",
      "vmNicName": "[concat(parameters('VMName'), 'NetworkInterface')]",
      "publicIPAddressName": "VMIP01"
    },
    "resources": [
      {
        "name": "[variables('storageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[parameters('location')]",
        "apiVersion": "2015-06-15",
        "dependsOn": [],
        "tags": {
          "displayName": "Storage01"
        },
        "properties": {
          "accountType": "[parameters('storageType')]"
        }
      },
      {
        "name": "VNet01",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[parameters('location')]",
        "apiVersion": "2015-06-15",
        "dependsOn": [],
        "tags": {
          "displayName": "VNet01"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vnet01Prefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('vnet01Subnet1Name')]",
              "properties": {
                "addressPrefix": "[variables('vnet01Subnet1Prefix')]"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('vmNicName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[parameters('location')]",
        "apiVersion": "2015-06-15",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', 'Vnet01')]",
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "tags": {
          "displayName": "VMNic01"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('vmSubnetRef')]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "name": "[parameters('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[parameters('location')]",
        "apiVersion":"2017-03-30",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
        ],
        "tags": {
          "displayName": "VM01"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('vmImagePublisher')]",
              "offer": "[variables('vmImageOffer')]",
              "sku": "[parameters('vmVisualStudioVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(parameters('vmName'),'_OSDisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "StartBoxstarter",
            "type": "extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "tags": {
              "displayName": "StartBoxstarter"
            },
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.9",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[concat(parameters('startBoxstarterScriptLocation'),parameters('startBoxstarterScriptFileName'))]"
                ],
                "commandToExecute": "[concat('powershell -ExecutionPolicy bypass -File ',parameters('startBoxstarterScriptFileName'),' -ConfigRawGistURL ',parameters('boxstarterConfigRawGistURL'))]"
              }
            }
          }
        ]
      },
      {
        "name": "[variables('publicIPAddressName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[parameters('location')]",
        "apiVersion": "2015-06-15",
        "dependsOn": [],
        "tags": {
          "displayName": "VMIP01"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      }
    ],
    "outputs": {
        "vm-fqdn": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName'), '2016-03-30').dnsSettings.fqdn]"
          },
          "vmName": {
            "type": "string",
            "value": "[parameters('vmName')]"
          }
    }
  }
